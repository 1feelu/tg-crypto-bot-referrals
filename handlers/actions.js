require('dotenv').config()
const { Markup } = require('telegraf')
const User = require('../models/User')

async function handleRefSystem(ctx) {
	try {
		if (!ctx.from || !ctx.from.id) {
			throw new Error('Invalid context: ctx.from.id is missing')
		}

		const userId = ctx.from.id
		const user = await User.findOne({ userId })

		if (user) {
			const referralLink = `https://t.me/${ctx.botInfo.username}?start=${userId}`
			await ctx.editMessageText(
				`–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 8 LIR (0.08 USDT). –í—ã–≤–æ–¥ –¥–µ–Ω–µ–≥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ Qiwi, CryptoBot –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±.\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${referralLink}`,
				Markup.inlineKeyboard([[Markup.button.callback('üì≤–ú–µ–Ω—é', 'menu')]])
			)
		} else {
			await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
		}
	} catch (err) {
		console.error('Error in handleRefSystem:', err)
		await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
	}
}

async function handleMyAccount(ctx) {
	try {
		const userId = ctx.from.id
		const user = await User.findOne({ userId })

		if (user) {
			const text = `–í–∞—à –Ω–∏–∫: ${user.username}\n–í–∞—à ID: ${userId}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${user.referrals}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${user.balance} LIR`
			const buttons = [
				user.balance < 120
					? Markup.button.callback('‚ùå–í—ã–≤–æ–¥ –æ—Ç 120 LIR', 'menu')
					: Markup.button.url(
							'üí∞–í—ã–≤–æ–¥',
							`https://t.me/${process.env.ADMIN_USERNAME}`
					  ),
				Markup.button.callback('üì≤–ú–µ–Ω—é', 'menu'),
			]

			await ctx.editMessageText(text, Markup.inlineKeyboard(buttons))
		} else {
			await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
		}
	} catch (err) {
		console.error('Error in handleMyAccount:', err)
		await ctx.reply(
			'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
		)
	}
}

module.exports = { handleRefSystem, handleMyAccount }
